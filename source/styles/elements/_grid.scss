/**
 * These styles are based on or extend Bootstrap's. Please refer to the
 * Bootstrap grid documentation before adding new patterns here to insure they
 * are not redundant.
 */

$container-page-max-width: $screen-lg-min !default;
$container-page-gutter: ($grid-gutter-width / 2) !default;
$container-page-gutter-breakpoint: $screen-lg-min !default;

.container-page {
  margin-left: auto;
  margin-right: auto;
  max-width: $container-page-max-width;
  @include clearfix;

  @media (min-width: $container-page-gutter-breakpoint) {
    padding-left: $container-page-gutter;
    padding-right: $container-page-gutter;
  }
}

/**
 * Inspired by: http://julienmelissas.com/no-gutter-column-trick-for-bootstrap/
 */

@mixin make-no-gutters-helpers ($suffix: '') {
  .row.no-gutters#{$suffix} {
    margin-left: 0;
    margin-right: 0;
  }

  /**
   * Note, this avoids @extends and placeholders so it can work from within
   * media queries, a current shortcoming of Sass. I've chosen to keep this
   * readable here rather than resorting to string concatenation to decrease
   * duplication (especially since the rules themselves are much smaller than
   * the selectors themselves).
   */

  .container,
  .container-fluid,
  .container-page {
    &.no-gutters#{$suffix} {
      padding-left: 0;
      padding-right: 0;
    }
  }

  @for $i from 1 through $grid-columns {
    .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i} {
      .container.no-gutters#{$suffix} > &,
      .container-fluid.no-gutters#{$suffix} > &,
      .container-page.no-gutters#{$suffix} > &,
      .row.no-gutters#{$suffix} > &,
      &.no-gutters#{$suffix} {
        padding-left: 0;
        padding-right: 0;
      }
    }
  }
}

@include make-no-gutters-helpers();

@media (max-width: $screen-xs-max) {
  @include make-no-gutters-helpers('-xs');
}

@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
  @include make-no-gutters-helpers('-sm');
}

@media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
  @include make-no-gutters-helpers('-md');
}

@media (min-width: $screen-lg-min) {
  @include make-no-gutters-helpers('-lg');
}

/**
* Create helper class for .row that adds full height vertical divider bars 
* between columns.
*/

@mixin make-vertical-dividers ($suffix: '') {
  .with-vertical-dividers#{$suffix} {
    overflow: hidden;

    > [class^="col-"],
    > [class*=" col-"] { 
      :nth-last-child(n+2) {
        &:after {
          content: '';
          position: absolute;
          top: 0;
          right: 0;
          display: block;
          width: 2px;
          height: 1000px;
          background-color: $gray-lighter;
        }
      }
    }
  }
}

/*
@include make-vertical-dividers();

@media (min-width: $screen-sm-min) {
  @include make-vertical-dividers('-sm');
}

@media (min-width: $screen-md-min) {
  @include make-vertical-dividers('-md');
}
*/

@media (min-width: $screen-lg-min) {
  @include make-vertical-dividers('-lg');
}
