.grid {
  display:block;
  overflow:hidden;
  position: relative;
  margin: 0 0 $gap;
  clear:left;
}
.col {
  display: block;
  box-sizing: border-box;
  clear:both;
}
.col > .grid {
  margin-bottom: 0;
}
.col-12of12 {
  width: percentage(12 / 12);
}

// on everything but the narrowests of screens, columns get some left and right padding
@media only screen and (min-width: $bp-xs) {
  .col {
    padding: 0 $gap;
  }
  .col-pull-right {
    padding-right: 0;
  }
  .col-pull-left {
    padding-left: 0;
  }
  .col > .grid {
    margin-left: -($gap);
    margin-right: -($gap);
  }
  .xs-column {
    float:left;
    clear:none;
    &.col-last {
      float: right;
    }
  }
  .col-4of12, .col-6of12, .col-8of12 {
    @extend .xs-column;
  }
  .col-4of12 {
    width: percentage(4 / 12);
  }
  .col-6of12 {
    width: percentage(6 / 12);
  }
  .col-8of12 {
    width: percentage(8 / 12);
  }
}

// but, when nested, these columns are still full width
@media only screen and (max-width: $bp-sm) {
  .col .col-4of12, .col .col-6of12, .col .col-8of12 {
    float: none;
    width: 100%;
    clear:both;
  } 
}

// when we get enough room the grid can have up to 4 columns
@media only screen and (min-width: $bp-sm) {
  .sm-column {
    float:left;
    clear:none;
    &.col-last {
      float: right;
    }
  }
  .col-3of12, .col-9of12 {
    @extend .sm-column;
  }
  .col-3of12 {
    width: percentage(3 / 12);
  }
  .col-9of12 {
    width: percentage(9 / 12);
  }
}


@media only screen and (max-width: $bp-med) {
  .col .col-3of12, .col .col-9of12 {
    float: none;
    width: 100%;
    clear:both;
  } 
}
// as screen size allows, the grid may be composed six columns
@media only screen and (min-width: $bp-med) {
  .med-column {
    float:left;
    clear:none;
    &.col-last {
      float: right;
    }
  }
  .col-2of12, .col-5of12, .col-7of12, .col-10of12 {
    @extend .med-column;
  }
  .col-2of12 {
    width: percentage(2 / 12);
  }
  .col-5of12 {
    width: percentage(5 / 12);
  }
  .col-7of12 {
    width: percentage(7 / 12);
  }
  .col-10of12 {
    width: percentage(10 / 12);
  }
}

@media only screen and (max-width: $bp-lg) {
  .col .col-2of12, .col .col-5of12, .col .col-7of12, .col .col-10of12  {
    float: none;
    width: 100%;
    clear:both;
  } 
}

@media only screen and (min-width: $bp-lg) {
  .lg-column {
    float:left;
    clear:none;
    &.col-last {
      float: right;
    }
  }
  .col-1of12, col-11of12 {
    @extend .lg-column;
  }
  .col-1of12 {
    width: percentage(1 / 12);
  }
  .col-11of12 {
    width: percentage(11 / 12);
  }
}

// for grid demonstration purposes only 

.background-on {
  background: pink;
  .col {
    background: #ddd;
    border: 1px solid #999;
  }
}